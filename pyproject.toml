[tool.poetry]
name = "meltanolabs-target-snowflake"
version = "0.0.0"
description = "`target-snowflake` is a Singer target for Snowflake, built with the Meltano SDK for Singer Targets."
readme = "README.md"
authors = ["Ken Payne"]
keywords = [
    "ELT",
    "Snowflake",
]
license = "Apache 2.0"
packages = [
    { include = "target_snowflake" }
]

[tool.poetry.dependencies]
python = "<3.12,>=3.7.1"
requests = "^2.31.0"
snowflake-sqlalchemy = "^1.4.7"
singer-sdk = "0.30.0"
cryptography = "^40.0.2"

[tool.poetry.dev-dependencies]
pytest = "^7.4.3"
pytest-xdist = ">=3.3.1"
singer-sdk = { version="0.30.0", extras = ["testing"] }

[tool.poetry.group.dev.dependencies]
coverage = "^7.2.7"

[tool.ruff]
line-length = 120
src = ["target_snowflake"]
target-version = "py37"

[tool.ruff.lint]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "ANN201",
    "TD",
    "D",
    "FIX",
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["target_snowflake"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S608", "PLR2004", "ANN"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=1.0.8", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.scripts]
# CLI declaration
target-snowflake = 'target_snowflake.target:TargetSnowflake.cli'

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
